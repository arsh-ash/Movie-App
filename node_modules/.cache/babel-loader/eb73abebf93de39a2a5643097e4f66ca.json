{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mohd Arsh\\\\Desktop\\\\React Development\\\\movie-app\\\\src\\\\components\\\\App.js\";\nimport React from \"react\";\nimport { data } from \"../data.js\";\nimport Navbar from \"./Navbar.jsx\";\nimport MovieCard from \"./MovieCard.js\";\nimport { addmovies, showfav } from \"../actions\";\nimport { render } from \"@testing-library/react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.isFavourite = movie => {\n      const {\n        movies\n      } = this.props.store.getState();\n      const index = movies.favourites.indexOf(movie);\n\n      if (index == -1) {\n        return true;\n      } else {\n        return false;\n      }\n    };\n\n    this.onChangeTab = val => {\n      this.props.store.dispatch(showfav(val));\n    };\n  }\n\n  componentDidMount() {\n    this.props.store.subscribe(() => {\n      // console.log(\"updated\");\n      this.forceUpdate();\n    });\n    this.props.store.dispatch(addmovies(data));\n  }\n\n  render() {\n    // pehle state array thi \n    // const movies=this.props.store.getState();\n    // ab state object hai\n    // console.log(\"state=\",this.props.store.getState());\n    const {\n      movies,\n      search\n    } = this.props.store.getState();\n    const {\n      list,\n      favourites,\n      showFavourite\n    } = movies;\n    const displaymovies = showFavourite ? favourites : list;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main\",\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {\n        search: search,\n        dispatch: this.props.store.dispatch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tabs\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: `tab ${showFavourite ? '' : `active-tabs`}`,\n            onClick: () => this.onChangeTab(false),\n            children: \"Movies\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 14\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `tab ${showFavourite ? `active-tabs` : ''}`,\n            onClick: () => this.onChangeTab(true),\n            children: \"Favourites\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 14\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"list\",\n          children: displaymovies.map((movie, index) => {\n            return /*#__PURE__*/_jsxDEV(MovieCard, {\n              movie: movie,\n              dispatch: this.props.store.dispatch,\n              isFavourite: this.isFavourite(movie)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 15\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 9\n        }, this), displaymovies.length == 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"no-movies\",\n          children: \"No movies to display!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 34\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Mohd Arsh/Desktop/React Development/movie-app/src/components/App.js"],"names":["React","data","Navbar","MovieCard","addmovies","showfav","render","App","Component","isFavourite","movie","movies","props","store","getState","index","favourites","indexOf","onChangeTab","val","dispatch","componentDidMount","subscribe","forceUpdate","search","list","showFavourite","displaymovies","map","length"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {data} from \"../data.js\"\nimport Navbar from \"./Navbar.jsx\"\nimport MovieCard from \"./MovieCard.js\"\nimport {addmovies,showfav}from \"../actions\"\nimport { render } from \"@testing-library/react\";\n\nclass  App extends React.Component {\n  componentDidMount(){\n    this.props.store.subscribe(()=>{\n      // console.log(\"updated\");\n      this.forceUpdate();\n    })\n    this.props.store.dispatch(addmovies(data));\n  }\n\n  isFavourite=(movie)=>{\n\n    const{movies}=this.props.store.getState();\n    const index=movies.favourites.indexOf(movie);\n    if(index==-1){\n      return true;\n    }\n    else{\n      return false;\n    }\n\n  }\n  onChangeTab=(val)=>{\n    this.props.store.dispatch(showfav(val))\n  }\n  \n  render(){ \n    // pehle state array thi \n    // const movies=this.props.store.getState();\n    // ab state object hai\n    // console.log(\"state=\",this.props.store.getState());\n    const{movies,search}=this.props.store.getState();\n    const{list,favourites,showFavourite}=movies\n    const displaymovies=showFavourite?favourites:list;\n    return (\n      <div className=\"main\">   \n      <Navbar search={search} \n      dispatch={this.props.store.dispatch}\n        \n      />\n      \n      <div className=\"main\">\n        <div className=\"tabs\">\n             <div className={`tab ${showFavourite?'':`active-tabs`}`} onClick={()=>this.onChangeTab(false)}>Movies</div>\n             <div className={`tab ${showFavourite?`active-tabs`:''}`} onClick={()=>this.onChangeTab(true)}>Favourites</div>\n  \n        </div>\n        <div className=\"list\">\n             {displaymovies.map((movie,index)=>{\n             return(\n              <MovieCard  \n              movie={movie} \n              key={index} \n              dispatch={this.props.store.dispatch}\n              isFavourite={this.isFavourite(movie)}\n\n              />\n              )\n     \n             })}\n        </div>\n        {displaymovies.length==0?<div className=\"no-movies\">No movies to display!</div>:null}\n      </div>\n      </div>\n      \n  \n    );\n\n  }\n \n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}