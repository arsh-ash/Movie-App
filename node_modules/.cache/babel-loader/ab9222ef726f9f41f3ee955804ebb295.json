{"ast":null,"code":"import { ADD_MOVIES, ADD_FAVOURITE, UN_FAVOURITE, SHOW_FAVOURITE, ADD_MOVIE_TO_LIST, ADD_SEARCH_RESULTS } from \"../actions\";\nconst initialMoviesState = {\n  list: [],\n  favourites: [],\n  showFavourite: false\n};\nexport function movies(state = initialMoviesState, action) {\n  if (action.type === ADD_MOVIES) {\n    return { ...state,\n      list: action.movies\n    };\n  } else if (action.type === ADD_FAVOURITE) {\n    return { ...state,\n      favourites: [action.movie, ...state.favourites]\n    };\n  } else if (action.type === UN_FAVOURITE) {\n    const filteredarray = state.favourites.filter(movie => {\n      return movie.Title !== action.movie.Title;\n    });\n    return { ...state,\n      favourites: filteredarray\n    };\n  } else if (action.type === SHOW_FAVOURITE) {\n    return { ...state,\n      showFavourite: action.val\n    };\n  } else if (action.type === ADD_MOVIE_TO_LIST) {\n    return { ...state,\n      list: [action.movie, ...state.list]\n    };\n  }\n\n  return state;\n}\nconst initialsearch = {\n  result: {},\n  showSearchResult: false\n};\nexport function search(state = initialsearch, action) {\n  if (action.type === ADD_SEARCH_RESULTS) {\n    return { ...state,\n      result: action.movie,\n      showSearchResult: true\n    };\n  } else if (action.type === ADD_MOVIE_TO_LIST) {\n    return { ...state,\n      showSearchResult: false\n    };\n  }\n\n  return state;\n}\nconst initialRootState = {\n  movies: initialMoviesState,\n  search: initialsearch\n};\nexport default function rootReducer(state = initialRootState, action) {\n  return {\n    movies: movies(state.movies, action),\n    search: search(state.search, action)\n  };\n}","map":{"version":3,"sources":["C:/Users/Mohd Arsh/Desktop/React Development/movie-app/src/reducer/index.js"],"names":["ADD_MOVIES","ADD_FAVOURITE","UN_FAVOURITE","SHOW_FAVOURITE","ADD_MOVIE_TO_LIST","ADD_SEARCH_RESULTS","initialMoviesState","list","favourites","showFavourite","movies","state","action","type","movie","filteredarray","filter","Title","val","initialsearch","result","showSearchResult","search","initialRootState","rootReducer"],"mappings":"AACA,SAAQA,UAAR,EACKC,aADL,EAEKC,YAFL,EAGKC,cAHL,EAIKC,iBAJL,EAKKC,kBALL,QAMO,YANP;AAQA,MAAMC,kBAAkB,GAAC;AACrBC,EAAAA,IAAI,EAAC,EADgB;AAErBC,EAAAA,UAAU,EAAC,EAFU;AAGrBC,EAAAA,aAAa,EAAC;AAHO,CAAzB;AAKA,OAAO,SAASC,MAAT,CAAgBC,KAAK,GAACL,kBAAtB,EAAyCM,MAAzC,EAAgD;AACnD,MAAGA,MAAM,CAACC,IAAP,KAAcb,UAAjB,EAA4B;AAC3B,WAAM,EACJ,GAAGW,KADC;AAEJJ,MAAAA,IAAI,EAACK,MAAM,CAACF;AAFR,KAAN;AAKA,GAND,MAOK,IAAGE,MAAM,CAACC,IAAP,KAAcZ,aAAjB,EAA+B;AAEhC,WAAM,EACF,GAAGU,KADD;AAEFH,MAAAA,UAAU,EAAC,CAACI,MAAM,CAACE,KAAR,EAAe,GAAGH,KAAK,CAACH,UAAxB;AAFT,KAAN;AAIH,GANI,MAOA,IAAGI,MAAM,CAACC,IAAP,KAAcX,YAAjB,EAA8B;AAC/B,UAAMa,aAAa,GAACJ,KAAK,CAACH,UAAN,CAAiBQ,MAAjB,CAAwBF,KAAK,IAAE;AAChD,aAAQA,KAAK,CAACG,KAAN,KAAcL,MAAM,CAACE,KAAP,CAAaG,KAAnC;AAEF,KAHmB,CAApB;AAIA,WAAM,EAAE,GAAGN,KAAL;AAAWH,MAAAA,UAAU,EAACO;AAAtB,KAAN;AAGH,GARI,MASA,IAAGH,MAAM,CAACC,IAAP,KAAcV,cAAjB,EAAgC;AACjC,WAAM,EACF,GAAGQ,KADD;AAEFF,MAAAA,aAAa,EAACG,MAAM,CAACM;AAFnB,KAAN;AAKH,GANI,MAOA,IAAGN,MAAM,CAACC,IAAP,KAAcT,iBAAjB,EAAmC;AACpC,WAAM,EACF,GAAGO,KADD;AAEFJ,MAAAA,IAAI,EAAC,CAACK,MAAM,CAACE,KAAR,EAAc,GAAGH,KAAK,CAACJ,IAAvB;AAFH,KAAN;AAIH;;AACD,SAAOI,KAAP;AAEH;AACD,MAAMQ,aAAa,GAAC;AAChBC,EAAAA,MAAM,EAAC,EADS;AAEhBC,EAAAA,gBAAgB,EAAC;AAFD,CAApB;AAMA,OAAO,SAASC,MAAT,CAAgBX,KAAK,GAACQ,aAAtB,EAAoCP,MAApC,EAA2C;AAG9C,MAAGA,MAAM,CAACC,IAAP,KAAcR,kBAAjB,EAAoC;AAChC,WAAM,EACF,GAAGM,KADD;AAEFS,MAAAA,MAAM,EAACR,MAAM,CAACE,KAFZ;AAGFO,MAAAA,gBAAgB,EAAC;AAHf,KAAN;AAKH,GAND,MAOK,IAAGT,MAAM,CAACC,IAAP,KAAcT,iBAAjB,EAAmC;AACpC,WAAM,EACF,GAAGO,KADD;AAEFU,MAAAA,gBAAgB,EAAC;AAFf,KAAN;AAIH;;AACD,SAAOV,KAAP;AAEH;AAED,MAAMY,gBAAgB,GAAC;AAEnBb,EAAAA,MAAM,EAACJ,kBAFY;AAGnBgB,EAAAA,MAAM,EAACH;AAHY,CAAvB;AAMA,eAAgB,SAASK,WAAT,CAAqBb,KAAK,GAACY,gBAA3B,EAA4CX,MAA5C,EAAmD;AAC/D,SAAM;AACFF,IAAAA,MAAM,EAACA,MAAM,CAACC,KAAK,CAACD,MAAP,EAAcE,MAAd,CADX;AAEFU,IAAAA,MAAM,EAACA,MAAM,CAACX,KAAK,CAACW,MAAP,EAAcV,MAAd;AAFX,GAAN;AAKH","sourcesContent":["\r\nimport {ADD_MOVIES\r\n    ,ADD_FAVOURITE\r\n    ,UN_FAVOURITE\r\n    ,SHOW_FAVOURITE\r\n    ,ADD_MOVIE_TO_LIST\r\n    ,ADD_SEARCH_RESULTS\r\n} from \"../actions\"\r\n\r\nconst initialMoviesState={\r\n    list:[],\r\n    favourites:[],\r\n    showFavourite:false\r\n}\r\nexport function movies(state=initialMoviesState,action){\r\n    if(action.type===ADD_MOVIES){\r\n     return{\r\n       ...state,\r\n       list:action.movies\r\n\r\n       }\r\n    }\r\n    else if(action.type===ADD_FAVOURITE){\r\n      \r\n        return{\r\n            ...state,\r\n            favourites:[action.movie, ...state.favourites]\r\n        }\r\n    }\r\n    else if(action.type===UN_FAVOURITE){\r\n        const filteredarray=state.favourites.filter(movie=>{\r\n           return  movie.Title!==action.movie.Title\r\n\r\n        })\r\n        return{ ...state,favourites:filteredarray }\r\n        \r\n\r\n    }\r\n    else if(action.type===SHOW_FAVOURITE){\r\n        return{\r\n            ...state,\r\n            showFavourite:action.val\r\n        }\r\n\r\n    }\r\n    else if(action.type===ADD_MOVIE_TO_LIST){\r\n        return{\r\n            ...state,\r\n            list:[action.movie,...state.list]\r\n        }\r\n    }\r\n    return state;\r\n    \r\n}\r\nconst initialsearch={\r\n    result:{},\r\n    showSearchResult:false\r\n\r\n}\r\n\r\nexport function search(state=initialsearch,action){\r\n    \r\n    \r\n    if(action.type===ADD_SEARCH_RESULTS){\r\n        return{\r\n            ...state,\r\n            result:action.movie,\r\n            showSearchResult:true\r\n            }\r\n    }\r\n    else if(action.type===ADD_MOVIE_TO_LIST){\r\n        return{\r\n            ...state,\r\n            showSearchResult:false\r\n        }\r\n    }\r\n    return state;\r\n\r\n}\r\n\r\nconst initialRootState={\r\n\r\n    movies:initialMoviesState,\r\n    search:initialsearch\r\n}\r\n\r\nexport  default function rootReducer(state=initialRootState,action){\r\n    return{\r\n        movies:movies(state.movies,action),\r\n        search:search(state.search,action)\r\n    }\r\n\r\n}"]},"metadata":{},"sourceType":"module"}