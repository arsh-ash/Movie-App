{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mohd Arsh\\\\Desktop\\\\React Development\\\\movie-app\\\\src\\\\components\\\\App.js\";\nimport React from \"react\";\nimport { data } from \"../data.js\";\nimport Navbarwrapper from \"./Navbar.jsx\";\nimport MovieCard from \"./MovieCard.js\";\nimport { addmovies, showfav } from \"../actions\";\nimport { connect } from \"react-redux\";\nimport { render } from \"@testing-library/react\";\nimport { search } from \"../reducer/index.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.isFavourite = movie => {\n      const {\n        movies\n      } = this.props.movies;\n      const index = movies.favourites.indexOf(movie);\n\n      if (index == -1) {\n        return true;\n      } else {\n        return false;\n      }\n    };\n\n    this.onChangeTab = val => {\n      this.props.dispatch(showfav(val));\n    };\n  }\n\n  componentDidMount() {\n    // store.subscribe(()=>{\n    //   this.forceUpdate();\n    // })\n    this.props.dispatch(addmovies(data));\n  }\n\n  render() {\n    // pehle state array thi \n    // const movies=this.props.store.getState();\n    // ab state object hai\n    // console.log(\"state=\",this.props.store.getState());\n    const {\n      movies,\n      search\n    } = this.props;\n    const {\n      showSearchResult,\n      result\n    } = search;\n    const {\n      list,\n      favourites,\n      showFavourite\n    } = movies;\n    const displaymovies = showFavourite ? favourites : list;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main\",\n      children: [/*#__PURE__*/_jsxDEV(Navbarwrapper, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tabs\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: `tab ${showFavourite ? '' : `active-tabs`}`,\n            onClick: () => this.onChangeTab(false),\n            children: \"Movies\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 14\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `tab ${showFavourite ? `active-tabs` : ''}`,\n            onClick: () => this.onChangeTab(true),\n            children: \"Favourites\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 14\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"list\",\n          children: displaymovies.map((movie, index) => {\n            return /*#__PURE__*/_jsxDEV(MovieCard, {\n              movie: movie,\n              dispatch: this.props.store.dispatch,\n              isFavourite: this.isFavourite(movie)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 15\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 9\n        }, this), displaymovies.length == 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"no-movies\",\n          children: \"No movies to display!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 34\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this);\n  }\n\n} // class Appwrapper extends React.Component{\n//   render(){\n//     return(\n//       <storeContext.Consumer>\n//       {\n//         (store)=>{\n//           return(\n//             <App store={store}/>          \n//             )\n//         }\n//       }\n//       </storeContext.Consumer>\n//     )\n//   }\n// }\n\n\nfunction mapStateToprops(state) {\n  return {\n    movies: state.movies,\n    search: state.movies\n  };\n}\n\nconst connectAppcomponent = connect(mapStateToprops)(App);\nexport default connectAppcomponent;","map":{"version":3,"sources":["C:/Users/Mohd Arsh/Desktop/React Development/movie-app/src/components/App.js"],"names":["React","data","Navbarwrapper","MovieCard","addmovies","showfav","connect","render","search","App","Component","isFavourite","movie","movies","props","index","favourites","indexOf","onChangeTab","val","dispatch","componentDidMount","showSearchResult","result","list","showFavourite","displaymovies","map","store","length","mapStateToprops","state","connectAppcomponent"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {data} from \"../data.js\"\nimport Navbarwrapper from \"./Navbar.jsx\"\nimport MovieCard from \"./MovieCard.js\"\nimport {addmovies,showfav}from \"../actions\"\nimport { connect } from \"react-redux\";\nimport { render } from \"@testing-library/react\";\nimport { search } from \"../reducer/index.js\";\n\n\nclass  App extends React.Component {\n  componentDidMount(){\n    // store.subscribe(()=>{\n    \n    //   this.forceUpdate();\n    // })\n    this.props.dispatch(addmovies(data));\n  }\n\n  isFavourite=(movie)=>{\n\n    const{movies}=this.props.movies\n    const index=movies.favourites.indexOf(movie);\n    if(index==-1){\n      return true;\n    }\n    else{\n      return false;\n    }\n\n  }\n  onChangeTab=(val)=>{\n    this.props.dispatch(showfav(val))\n  }\n  \n  render(){ \n    // pehle state array thi \n    // const movies=this.props.store.getState();\n    // ab state object hai\n    // console.log(\"state=\",this.props.store.getState());\n    const{movies,search}=this.props\n    const{ showSearchResult,result}=search;\n    const{list,favourites,showFavourite}=movies\n    const displaymovies=showFavourite?favourites:list;\n    return (\n      <div className=\"main\">   \n      <Navbarwrapper />\n      \n      <div className=\"main\"> \n        <div className=\"tabs\">\n             <div className={`tab ${showFavourite?'':`active-tabs`}`} onClick={()=>this.onChangeTab(false)}>Movies</div>\n             <div className={`tab ${showFavourite?`active-tabs`:''}`} onClick={()=>this.onChangeTab(true)}>Favourites</div>\n  \n        </div>\n        <div className=\"list\">\n             {displaymovies.map((movie,index)=>{\n             return(\n              <MovieCard  \n              movie={movie} \n              key={index} \n              dispatch={this.props.store.dispatch}\n              isFavourite={this.isFavourite(movie)}\n\n              />\n              )\n     \n             })}\n        </div>\n        {displaymovies.length==0?<div className=\"no-movies\">No movies to display!</div>:null}\n      </div>\n      </div>\n      \n  \n    );\n\n  }\n \n}\n\n// class Appwrapper extends React.Component{\n//   render(){\n//     return(\n//       <storeContext.Consumer>\n//       {\n//         (store)=>{\n//           return(\n//             <App store={store}/>          \n//             )\n\n//         }\n//       }\n\n//       </storeContext.Consumer>\n//     )\n//   }\n// }\nfunction mapStateToprops(state){\n  return{\n    movies:state.movies,\n    search:state.movies\n  }\n}\nconst connectAppcomponent=connect(mapStateToprops)(App);\nexport default connectAppcomponent\n\n"]},"metadata":{},"sourceType":"module"}